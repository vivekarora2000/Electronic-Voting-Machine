#make_bin#
 
#LOAD_SEGMENT=0FFFFH#
#LOAD_OFFSET=0000h#
 
#CS=0000h#
#IP=0000h#
 
#DS=0000h#
#ES=0000h#
 
#SS=0000h#
#SP=FFFEh#
 
#AX=0000h#
#BX=0000h#
#CX=0000h#
#DX=0000h#
#SI=0000h#
#DI=0000h#
#BP=0000h#
 
	JMP START
    NOP
    ; 4 BYTES USED
 
    DW 0000
    DW 0000 ;INT1 NOT USED
 
    ;INT 2 NMI IS USED:
    DW INTBEG
     ;IP
    DW 0000 ;CS
 
	DB     1012 DUP(0) ; NOT USING INT 3 TO INT 255
 
	PWD1 DB '11111'
	PWD2 DB '22222'
	PWD3 DB '33333'
	PWD4 DB '44444'
	PWD5 DB '55555'
	PWD6 DB '66666'
	PWD7 DB '77777'
	PWD8 DB '88888'
	PWDP DB '99999'
	PWDENT DB 5 DUP('$')
	
	;;;THIS IS FOR THE KEYBOARD;;;
	TABLE_K DB 0EEH,0EDH,0EBH,0E7H,0DEH,0DDH,0DBH,0D7H,0BEH,0BDH,0BBH,0B7H,7EH,7DH,7BH,77H
	;;;;;;;;;;;;0;;;;1;;;;2;;;;3;;;;4;;;;;5;;;;6;;;7;;;;8;;;;9;;;BACK;;ENT;LOCK;UN;;DIS;VOTE
	TABLE_D DB '0','1','2','3','4','5','6','7','8','9','E','B','L','U','D','V'
	VOTES DW 0000H,0000H,0000H,0000H,0000H,0000H,0000H,0000H
	CREG EQU 16H
    PORTA EQU 10H
    PORTB EQU 12H
START:
		STI
; INTIALIZE DS, ES,SS TO START OF RAM
	MOV       AX,02000H
	MOV       DS,AX
	MOV       ES,AX
	MOV       SS,AX
	MOV       SP,02FFFH 
 
		
 
;INITIALIZE THE 8255 CONTAINING LCD AND OFFICER KEYPAD
		MOV 	  AL,081H    ;10000001B
		OUT 	  06H,AL
		MOV       AL,07H
		OUT       04H,AL  
		CALL      DELAY_20MS
		MOV       AL,05H
		OUT       04H,AL
		CALL      DELAY_20MS
		MOV       AL,04H
		OUT       04H,AL
		CALL      DELAY_20MS
		MOV       AL,38H
		OUT       00H,AL
		MOV       AL,00H
		OUT       04H,AL
		CALL      DELAY_20MS
;SET MODE AGIAN 
		MOV       AL,07H
		OUT       04H,AL  
		CALL      DELAY_20MS
		MOV       AL,05H
		OUT       04H,AL
		CALL      DELAY_20MS
		MOV       AL,04H
		OUT       04H,AL
		CALL      DELAY_20MS
		MOV       AL,38H
		OUT       00H,AL
		MOV       AL,00H
		OUT       04H,AL
		CALL      DELAY_20MS 
		CALL 	  CLEAR_LCD	
		
		MOV       BL,0
		
OFFICER1:
	
		CALL CLEAR_LCD
		MOV AL,'O'
		CALL WRITE_LCD
		MOV AL,'F'
		CALL WRITE_LCD
		MOV AL,'F'
		CALL WRITE_LCD
		MOV AL,'I'
		CALL WRITE_LCD
		MOV AL,'C'
		CALL WRITE_LCD
		MOV AL,'E'
		CALL WRITE_LCD
		MOV AL,'R'
		CALL WRITE_LCD
		MOV AL,'1'
		CALL WRITE_LCD
		LEA SI,PWD1 
		CALL ENTER_PASS
		LEA DI,PWDENT
		MOV CX,5
		REPE CMPSB
		CMP CX,0
		JZ OFFICER2
		INC BL
		CMP BL,3
		JNZ OFFICER1
		JMP XEND 
	
	
OFFICER2:
	
		CALL CLEAR_LCD 
		MOV BL,0
		MOV AL,'O'
		CALL WRITE_LCD
		MOV AL,'F'
		CALL WRITE_LCD
		MOV AL,'F'
		CALL WRITE_LCD
		MOV AL,'I'
		CALL WRITE_LCD
		MOV AL,'C'
		CALL WRITE_LCD
		MOV AL,'E'
		CALL WRITE_LCD
		MOV AL,'R'
		CALL WRITE_LCD
		MOV AL,'2'
		CALL WRITE_LCD
		LEA SI,PWD2
		CALL ENTER_PASS
		LEA DI,PWDENT
		MOV CX,5
		REPE CMPSB
		CMP CX,0
		JZ OFFICER3
		INC BL
		CMP BL,3
		JNZ OFFICER2
		JMP XEND  
		
	
OFFICER3:  
 
	 
		MOV BL,0	
		CALL CLEAR_LCD
		MOV AL,'O'
		CALL WRITE_LCD
		MOV AL,'F'
		CALL WRITE_LCD
		MOV AL,'F'
		CALL WRITE_LCD
		MOV AL,'I'
		CALL WRITE_LCD
		MOV AL,'C'
		CALL WRITE_LCD
		MOV AL,'E'
		CALL WRITE_LCD
		MOV AL,'R'
		CALL WRITE_LCD
		MOV AL,'3'
		CALL WRITE_LCD
		LEA SI,PWD3
		CALL ENTER_PASS
		LEA DI,PWDENT
		MOV CX,5
		REPE CMPSB
		CMP CX,0
		JZ OFFICER4
		INC BL
		CMP BL,3
		JNZ OFFICER3
		JMP XEND 
	
	
OFFICER4:
         
		MOV BL,0         
		CALL CLEAR_LCD
		MOV AL,'O'
		CALL WRITE_LCD
		MOV AL,'F'
		CALL WRITE_LCD
		MOV AL,'F'
		CALL WRITE_LCD
		MOV AL,'I'
		CALL WRITE_LCD
		MOV AL,'C'
		CALL WRITE_LCD
		MOV AL,'E'
		CALL WRITE_LCD
		MOV AL,'R'
		CALL WRITE_LCD
		MOV AL,'4'
		CALL WRITE_LCD
		LEA SI,PWD4
		CALL ENTER_PASS
		LEA DI,PWDENT
		MOV CX,5
		REPE CMPSB
		CMP CX,0
		JZ OFFICER5
		INC BL
		CMP BL,3
		JNZ OFFICER4
		JMP XEND 
	
	
OFFICER5: 
 
		MOV BL,0
		CALL CLEAR_LCD
		MOV AL,'O'
		CALL WRITE_LCD
		MOV AL,'F'
		CALL WRITE_LCD
		MOV AL,'F'
		CALL WRITE_LCD
		MOV AL,'I'
		CALL WRITE_LCD
		MOV AL,'C'
		CALL WRITE_LCD
		MOV AL,'E'
		CALL WRITE_LCD
		MOV AL,'R'
		CALL WRITE_LCD
		MOV AL,'5'
		CALL WRITE_LCD
		LEA SI,PWD5
		CALL ENTER_PASS
		LEA DI,PWDENT
		MOV CX,5
		REPE CMPSB
		CMP CX,0
		JZ OFFICER6
		INC BL
		CMP BL,3
		JNZ OFFICER5
		JMP XEND 
	
	
OFFICER6: 
 
		MOV BL,0	
		CALL CLEAR_LCD
		MOV AL,'O'
		CALL WRITE_LCD
		MOV AL,'F'
		CALL WRITE_LCD
		MOV AL,'F'
		CALL WRITE_LCD
		MOV AL,'I'
		CALL WRITE_LCD
		MOV AL,'C'
		CALL WRITE_LCD
		MOV AL,'E'
		CALL WRITE_LCD
		MOV AL,'R'
		CALL WRITE_LCD
		MOV AL,'6'
		CALL WRITE_LCD
		LEA SI,PWD6
		CALL ENTER_PASS
		LEA DI,PWDENT
		MOV CX,5
		REPE CMPSB
		CMP CX,0
		JZ OFFICER7
		INC BL
		CMP BL,3
		JNZ OFFICER6
		JMP XEND 
	
	
OFFICER7: 
 
		MOV BL,0
		CALL CLEAR_LCD
		MOV AL,'O'
		CALL WRITE_LCD
		MOV AL,'F'
		CALL WRITE_LCD
		MOV AL,'F'
		CALL WRITE_LCD
		MOV AL,'I'
		CALL WRITE_LCD
		MOV AL,'C'
		CALL WRITE_LCD
		MOV AL,'E'
		CALL WRITE_LCD
		MOV AL,'R'
		CALL WRITE_LCD
		MOV AL,'7'
		CALL WRITE_LCD
		LEA SI,PWD7
		CALL ENTER_PASS
		LEA DI,PWDENT
		MOV CX,5
		REPE CMPSB
		CMP CX,0
		JZ OFFICER8
		INC BL
		CMP BL,3
		JNZ OFFICER7
		JMP XEND 
	
	
OFFICER8: 
 
		MOV BL,0
		CALL CLEAR_LCD
		MOV AL,'O'
		CALL WRITE_LCD
		MOV AL,'F'
		CALL WRITE_LCD
		MOV AL,'F'
		CALL WRITE_LCD
		MOV AL,'I'
		CALL WRITE_LCD
		MOV AL,'C'
		CALL WRITE_LCD
		MOV AL,'E'
		CALL WRITE_LCD
		MOV AL,'R'
		CALL WRITE_LCD
		MOV AL,'8'
		CALL WRITE_LCD
		LEA SI,PWD8
		CALL ENTER_PASS
		LEA DI,PWDENT
		MOV CX,5
		REPE CMPSB
		CMP CX,0
		JZ OFFICERP
		INC BL
		CMP BL,3
		JNZ OFFICER8
		JMP XEND  
	
	
OFFICERP: 
 
		MOV BL,0
		CALL CLEAR_LCD
		MOV AL,'P'
		CALL WRITE_LCD
		MOV AL,'R'
		CALL WRITE_LCD
		MOV AL,'E'
		CALL WRITE_LCD
		MOV AL,'O'
		CALL WRITE_LCD
		MOV AL,'F'
		CALL WRITE_LCD
		MOV AL,'F'
		CALL WRITE_LCD
		MOV AL,'I'
		CALL WRITE_LCD
		MOV AL,'C'
		CALL WRITE_LCD
		MOV AL,'E'
		CALL WRITE_LCD
		MOV AL,'R'
		CALL WRITE_LCD
		LEA SI,PWDP
		CALL ENTER_PASS
		LEA DI,PWDENT
		MOV CX,5
		REPE CMPSB
		CMP CX,0
		JZ  VENABLE
		INC BL
		CMP BL,3
		JNZ OFFICERP
		JMP XEND  
		
VENABLE:
 
		
	; 8254 - 10 HOUR DELAY
	; INITIALIZING THE CONTROL WORD
		MOV AL,00110100B  ; COUNTER 0
		OUT 26H,AL  ; 20H IS THE START_ADDRESS FOR 8254
 
		MOV AL,01110100B  ; COUNTER 1
		OUT 26H,AL
 
		MOV AL,10110000B  ; COUNTER 2
		OUT 26H,AL
 
		; LOADING THE COUNTS
		MOV AL,50H  ; LOAD COUNT IN COUNTER 0
		OUT 20H,AL
		MOV AL,0C3H
		OUT 20H,AL
 
		MOV AL,64H  ; LOAD COUNT IN COUNTER 1
		OUT 22H,AL
		MOV AL,00H
		OUT 22H,AL
 
		MOV AL,0A0H  ; LOAD COUNT IN COUNTER 2
		OUT 24H,AL
		MOV AL,8CH
		OUT 24H,AL
			
		;LOWER COLUMN INPUT
		;UPPER ROW OUTPUT
		;INITIALIZE THE OTHER 8255
		
		MOV AL,10010000B ;THIS MAKE PORT A AS INPUT AND B AS OUTPUT AND PORT C DONT CARE HENCE OUTPUT
		OUT CREG,AL
		MOV AL,00H
		OUT PORTB,AL
		CALL DELAY_20MS
		
LOCKCODE:
		IN AL,04H	;CHECKING IF LAST ROW KEY IS PRESSED
		AND AL,0F0H
		CMP AL,070H
		JNZ BITCODE
		CALL DELAY_20MS
		IN AL,04H
		AND AL,0F0H
		CMP AL,070H
		JNZ BITCODE 
		MOV AL,0EH
		OUT 04H,AL	;CHECKING IF LOCK PRESSED
		IN AL,04H
		AND AL,0F0H
		CMP AL,70H
		JNZ BITCODE
UNLOCK:
		IN AL,04H		;CHECKING ALL KEYS RELEASED
		AND AL,0F0H
		CMP AL,0F0H
		JNZ UNLOCK
 
		IN AL,04H	;CHECKING IF LAST ROW KEY IS PRESSED
		AND AL,0F0H
		CMP AL,070H
		JNZ BITCODE
		CALL DELAY_20MS
		IN AL,04H
		AND AL,0F0H
		CMP AL,070H
		JNZ BITCODE
		MOV AL,0BH
		OUT 04H,AL		;CHECKING IF UNLOCK PRESSED
		IN AL,04H
		AND AL,0F0H
		CMP AL,70H
		JNZ UNLOCK
 
BITCODE:
		
	LEA DI,VOTES
	C1:
		IN AL,PORTA
		CMP AL,00H
		JE C1
 
	C2:
		CMP AL,00000001B
		JNE C3
		CALL DELAY_2S
		MOV AL,00H
		OUT PORTB,AL
		IN AL,PORTA
		CMP AL,00000001B
		JNE C1
		MOV BL,[DI]
		INC BL
		MOV [DI],BL
		OUT PORTB,AL
		CALL DELAY_2S
		MOV AL,00H
		OUT PORTB,AL
		JMP C1
	C3:
		CMP AL,00000010B
		JNE C4
		CALL DELAY_20MS
		MOV AL,00H
		OUT PORTB,AL
		IN AL,PORTA
		CMP AL,00000010B
		JNE C1
		MOV BL,[DI+2]
		INC BL
		MOV [DI+2],BL
		OUT PORTB,AL
		CALL DELAY_2S
		MOV AL,00H
		OUT PORTB,AL
		JMP C1
		
	C4:
		CMP AL,00000100B
		JNE C5
		CALL DELAY_20MS
		MOV AL,00H
		OUT PORTB,AL
		IN AL,PORTA
		CMP AL,0000100B
		JNE C1
		MOV BL,[DI+4]
		INC BL
		MOV [DI+4],BL
		OUT PORTB,AL
		CALL DELAY_2S
		MOV AL,00H
		OUT PORTB,AL
		JMP C1
		
	C5:
		CMP AL,00001000B
		JNE C6
		CALL DELAY_20MS
		MOV AL,00H
		OUT PORTB,AL
		IN AL,PORTA
		CMP AL,00001000B
		JNE C1
		MOV BL,[DI+6]
		INC BL
		MOV [DI+6],BL
		OUT PORTB,AL
		CALL DELAY_2S
		MOV AL,00H
		OUT PORTB,AL
		JMP C1
		
	C6:
		CMP AL,00010000B
		JNE C7
		CALL DELAY_20MS
		MOV AL,00H
		OUT PORTB,AL
		IN AL,PORTA
		CMP AL,00010000B
		JNE C1
		MOV BL,[DI+8]
		INC BL
		MOV [DI+8],BL
		OUT PORTB,AL
		CALL DELAY_2S
		MOV AL,00H
		OUT PORTB,AL
		JMP C1
 
 
	C7:
		CMP AL,00100000B
		JNE C8
		CALL DELAY_20MS
		MOV AL,00H
		OUT PORTB,AL
		IN AL,PORTA
		CMP AL,00100000B
		JNE C1
		MOV BL,[DI+10]
		INC BL
		MOV [DI+10],BL
		OUT PORTB,AL
		CALL DELAY_2S
		MOV AL,00H
		OUT PORTB,AL
		JMP C1
 
	C8:
		CMP AL,01000000B
		JNE C9
		CALL DELAY_20MS
		MOV AL,00H
		OUT PORTB,AL
		IN AL,PORTA
		CMP AL,01000000B
		JNE C1
		MOV BL,[DI+12]
		INC BL
		MOV [DI+12],BL
		OUT PORTB,AL
		CALL DELAY_2S
		MOV AL,00H
		OUT PORTB,AL
		JMP C1
 
	C9:
		CMP AL,10000000B
		JNE C10
		CALL DELAY_20MS
		MOV AL,00H
		OUT PORTB,AL
		IN AL,PORTA
		CMP AL,10000000B
		JNE C1
		MOV BL,[DI+14]
		INC BL
		MOV [DI+14],BL
		OUT PORTB,AL
		CALL DELAY_2S
		MOV AL,00H
		OUT PORTB,AL
		JMP C1   
 
	C10:
		MOV AL,00H
		OUT PORTB,AL
		JMP LOCKCODE  
		
        
	
;INTERRUPT 2
 
 
INTBEG:
		IN AL,04H	;CHECKING IF LAST ROW KEY IS PRESSED
		AND AL,0F0H
		CMP AL,070H
		JNZ INTBEG
 
		CALL DELAY_20MS
		IN AL,04H
		AND AL,0F0H
		CMP AL,070H
		JNZ INTBEG
 
		MOV AL,0DH
		OUT 04H,AL	;CHECKING IF POLL COUNT PRESSED
		IN AL,04H
		AND AL,0F0H
		CMP AL,70H
		JNZ INTBEG
 
		MOV CX,2
		MOV BL,5		;CHECKING PASSWORD
CHKPASS:
		CALL ENTER_PASS		
		LEA SI,PWDENT
		LEA DI,PWDP
CMPARE:		
		DEC BL
		CMPSB
		JZ CMPARE
		CMP BL,0
		JZ CNUMB
		LOOPNZ CHKPASS
		CMP CX,0
		JZ ENDPROG
 
CNUMB:
;       TAKING CANDIDATE NUMBER 
		CALL ENTER_PASS
		MOV BL,PWDENT 
		MOV SI,0 
		MOV BH,0
		ADD SI,BX
		SUB SI,1
KEYPRESS:
		IN AL,04H		;CHECKING IF DISPLAY COUNT PRESSED
		AND AL,0F0H
		CMP AL,07H
		JNZ KEYPRESS
		CALL DELAY_20MS
		IN AL,04H
		AND AL,0F0H
		CMP AL,07H
		JNZ KEYPRESS
		MOV AL,0EH
		OUT 04H,AL
		IN AL,04H
		CMP AL,07H
		JNZ KEYPRESS
		MOV AX,[VOTES+SI+SI]
		CALL CONVERTTOBCD
		CALL DISP_VOTE_CNT
		JMP INTBEG
 
 
ENDPROG:
		MOV AL,0
		CMP AL,0
		JZ ENDPROG
		IRET 
 
XEND: ;DISPLAY FAILED ON THE LCD AND LOOP TILL RESET
        MOV BL,0	
		CALL CLEAR_LCD
		MOV AL,'F'
		CALL WRITE_LCD
		MOV AL,'A'
		CALL WRITE_LCD
		MOV AL,'I'
		CALL WRITE_LCD
		MOV AL,'L'
		CALL WRITE_LCD
		MOV AL,'E'
		CALL WRITE_LCD
		MOV AL,'D'
		CALL WRITE_LCD
		MOV AL,'!'
		CALL WRITE_LCD
finally: 
    jmp finally
 
 
 
; Subroutines defined below:
 
DELAY_20MS PROC NEAR
		MOV CX,33333
		DELAY:
		NOP
		DEC CX
		JNZ DELAY
		RET
DELAY_20MS ENDP
 
 
DELAY_2S PROC NEAR
		MOV DX,100
	NEXT:
		MOV CX,33333
	DELAY2:
		NOP
		DEC CX
		JNZ DELAY2
		DEC DX
		JNZ NEXT
		RET
DELAY_2S ENDP
 
CONVERTTOBCD	PROC	NEAR
			MOV		AX,0000H
			MOV		CX,0
				
	D1:
			INC     CX				
			SHL     AX,1
			SHL 	DX,1			;HEX DATA TO BE CONVERTED TO BCD FORM IS IN DX
			JNC	    D2
			INC 	AX
	D2:		
			CMP    CX,16
			JZ 	   FINISH
			MOV    BL,AH		;BIN-4
			AND    BL,0F0H
			ROL    BL,1
			ROL    BL,1
			ROL    BL,1
			ROL    BL,1
			CMP    BL,5
			JB    D3
			ADD    AX,3000H
 
	D3:
			MOV	   BL,AH 		;BIN-3
			AND    BL,0FH
			CMP	   BL,5
			JB    D4
			ADD    AX,0300H
	D4:
			MOV    BL,AL		;BIN-2
			AND    BL,0F0H
			ROL    BL,1
			ROL    BL,1
			ROL    BL,1
			ROL    BL,1
			CMP    BL,5
			JB    D5
			ADD    AX,0030H	
	D5:
			MOV	   BL,AL 		;BIN-1
			AND    BL,0FH
			CMP    BL,5
			JB    D6
			ADD    AX,0003H
 
	D6:
				
			CMP   CX,16
			JA FINISH
			JMP D1
	FINISH:
			RET
CONVERTTOBCD 	ENDP
 
DISP_VOTE_CNT 	PROC NEAR
			MOV    CX,AX
			MOV    BH,AH
			AND    BH,0F0H
			ROL    BH,1
			ROL    BH,1
			ROL    BH,1
			ROL    BH,1
			MOV    AX,CX
 
			MOV    CX,AX
			ADD     BH,30H
			MOV    AL,' '
			CALL   WRITE_LCD
			MOV    AL,BH 		; TO DISPLAY ONE CHARACTER
			CALL   WRITE_LCD
			MOV    AX,CX
				
			MOV    CX,AX
			MOV    BH,AH
			AND    BH,0FH
			MOV    AX,CX
 
			MOV    CX,AX
			ADD     BH,30H
			MOV 	AL,BH  		; TO DISPLAY ONE CHARACTER
			CALL   WRITE_LCD
			MOV    AX,CX
 
			MOV    CX,AX
			MOV    BH,AL
			AND    BH,0F0H
			ROL    BH,1
				ROL    BH,1
				ROL    BH,1
				ROL    BH,1
				MOV    AX,CX
				
				MOV    CX,AX
				ADD     BH,30H
				MOV 	AL,BH 		; TO DISPLAY ONE CHARACTER
				CALL   WRITE_LCD
				MOV    AX,CX
 
				MOV    CX,AX
				MOV    BH,AL
				AND    BH,0FH
				MOV    AX,CX
 
				MOV    CX,AX
				ADD     BH,30H
				MOV 	AL,BH  		; TO DISPLAY ONE CHARACTER
				CALL   WRITE_LCD
				MOV    AX,CX
				PUSH CX
				MOV CX,30
                CALL DELAY_2S
				POP CX
				CALL CLEAR_LCD
				RET
DISP_VOTE_CNT	ENDP		
 
ENTER_PASS PROC NEAR
		LEA DI,PWDENT
		OUT 06H,AL
		MOV CX,5D
	
X_S:
X0:
;PC0-PC3 IS COLUMN INPUT
;PC4-PC7 IS ROW OUTPUT
		CALL CLEAR_LCD
X1:
		IN AL,04H
		AND AL,0F0H
		CMP AL,0F0H
		JNZ X1
		CALL DELAY_20MS
		CALL CLEAR_LCD
X2:        
		IN AL, 04H
		AND AL,0F0H
		CMP AL,0F0H
		JZ X2
		CALL DELAY_20MS
		MOV AL,00H
		OUT 04H ,AL
		IN AL, 04H
		AND AL,0F0H
		CMP AL,0F0H
		JZ X2
		MOV AL, 0EH
		MOV BL,AL
		OUT 04H,AL
		IN AL,04H
		AND AL,0F0H
		CMP AL,0F0H
		JNZ X3
		MOV AL, 0DH
		MOV BL,AL
		OUT 04H ,AL
		IN AL,04H
		AND AL,0F0H
		CMP AL,0F0H
		JNZ X3
		MOV AL, 0BH
		MOV BL,AL
		OUT 04H,AL
		IN AL,04H
		AND AL,0F0H
		CMP AL,0F0H
		JNZ X3
		MOV AL, 07H
		MOV BL,AL
		OUT 04H,AL
		IN AL,04H
		AND AL,0F0H
		CMP AL,0F0H
		JZ X2
X3: 
		OR AL,BL
		MOV CX,0FH
		MOV DI,00H
X4:       
		CMP AL,CS:TABLE_K[DI]
		JZ X5
		INC DI
		LOOP X4
 
X5:        
		LEA BX, TABLE_D
		MOV AL, CS:[BX+DI]
		CMP AL,'B'
		JNE X20
		INC CX
		DEC DI
		CALL WRITE_LCD
X20:
		CMP AL,'E'
		JNZ X6
		CALL CLEAR_LCD
		RET
X6:	
		MOV [DI],AL
		INC DI
		CALL WRITE_LCD
X7:
		DEC CX
		JNZ X0
		RET
ENTER_PASS ENDP	
 
CLEAR_LCD PROC NEAR
		MOV DL,AL
		MOV AL,01H
		OUT 00H,AL
		MOV AL,DL
		RET 
CLEAR_LCD ENDP
 
WRITE_LCD PROC NEAR
		CMP AL,'B'
		JNE PRINT
		MOV AL,04H
		OUT 00H,AL
		MOV AL,' '
		OUT 00H,AL
		RET
	PRINT:
		CMP AL,65
		JL NUMBER
		OUT 00,AL
        MOV AL,06H
		OUT 00H,AL
        RET
	NUMBER:
		ADD AL,30H
		OUT 00H,AL
		MOV AL,06H
		OUT 00H,AL
		RET
WRITE_LCD ENDP
	
		
		
		
 
 
 
 
 
 
	
		
 
		  